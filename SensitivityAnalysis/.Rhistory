pop.est<-summary(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel"))) #From FSA package
pop.low<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[1] # Confidence limits #
pop.high<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[2] # Confidence limits #
baseline<-data.frame(pop.est, pop.low, pop.high)
baseline
all_traps<-unique(df.data$trap) # A vector of all available traps
all_traps
use_traps<-sample(all_traps, 10) # Choose 10 random traps
use_traps
my_subset<-data.frame(df.data%>%
filter(trap %in% use_traps))
df.cmr<-data.frame(my_subset%>%
group_by(check)%>%
summarise(date=unique(check),n=sum(present), m=sum(tagged), M=400)%>%
select(n,m,M))
pop.est<-summary(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel"))) #From FSA package
pop.low<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[1] # Confidence intervals #
pop.high<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[2] # Confidence intervals #
results<-data.frame(pop.est, pop.low, pop.high)
results
baseline
results
my_cmr<-function(my_subset)
{
# Build cmr data frame
df.cmr<-data.frame(my_subset%>%
group_by(check)%>%
summarise(date=unique(check),n=sum(present), m=sum(tagged), M=400)%>%
select(n,m,M))
# Estimate Population Size
pop.est<<-summary(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel"))) #From FSA package
pop.low<<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[1] # Confidence intervals #
pop.high<<-stats::confint(with(df.cmr,mrClosed(n=n,m=m,M=M,method="Schnabel")))[2] # Confidence intervals #
}
results<-data.frame(traps=c(1:50), pop.est=NA, pop.low=NA, pop.high=NA)
for(i in 1:nrow(results)) # For each row in our results data frame
{
use_traps<-sample(all_traps, results$traps[i]) # Sample x number of random traps
my_subset<-data.frame(df.data%>%filter(trap %in% use_traps)) # Subset the data to only include those traps
my_cmr(my_subset) # Apply our my_cmr function to the subset
results$pop.est[i]<-pop.est # Fill in our results
results$pop.low[i]<-pop.low
results$pop.high[i]<-pop.high
}
results
my_plot1<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot1
my_plot2<-geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')
my_plot2
baseline
my_plot2<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')
my_plot2
my_plot2<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot2
my_plot1<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot1
my_plot2<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot2
results<-data.frame(traps=rep(seq(from=2, to=50, by=2),30), pop.est=NA, pop.low=NA, pop.high=NA)
starttime=Sys.time() # What time does the resampling begin?
for(i in 1:nrow(results))
{
use_traps<-sample(all_traps, results$traps[i])
my_subset<-data.frame(df.data%>%filter(trap %in% use_traps))
my_cmr(my_subset)
results$pop.est[i]<-pop.est
results$pop.low[i]<-pop.low
results$pop.high[i]<-pop.high
}
totaltime<-difftime(Sys.time(),starttime, unit="secs") #How long did it take?
totaltime
per.it<-paste(round(as.numeric(totaltime)/nrow(results),3),"seconds per iteration") # How long did each iteration take?
per.it
my_plot3<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.7)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.7)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.7)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
results.sum<-data.frame(results%>%
group_by(traps)%>%
summarise(mean.pop=mean(pop.est), mean.low=mean(pop.low), mean.high=mean(pop.high)))
my_plot5<-ggplot(results.sum)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot5
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.7)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.7)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.7)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.7, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.7, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.7, data=results)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5, data=results)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5, data=results)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25,col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5, data=results)+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5, data=results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
my_plot5<-ggplot(results.sum)+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot5
my_plot5<-ggplot(results.sum)+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot5
my_plot5<-ggplot(results.sum)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot5
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
my_plot3<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot3<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot3<-ggplot(results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot3<-ggplot(results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=pop.est), size=1.25)+
geom_line(aes(x=traps, y=pop.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot2<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est))+
geom_line(aes(x=traps, y=pop.low), linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), linetype='dashed')+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot2
my_plot2<-ggplot(results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4', linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4', linetype='dashed')+
geom_line(aes(x=traps, y=pop.est), size=1.25)+
geom_line(aes(x=traps, y=pop.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot2
my_plot1<-ggplot(results)+
geom_line(aes(x=traps, y=pop.est), size=1.25)+
geom_line(aes(x=traps, y=pop.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot1
my_plot3<-ggplot(results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=pop.est), size=1.25)+
geom_line(aes(x=traps, y=pop.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=pop.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot3
my_plot4<-ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot4
results.sum<-data.frame(results%>%
group_by(traps)%>%
summarise(mean.pop=mean(pop.est), mean.low=mean(pop.low), mean.high=mean(pop.high)))
my_plot5<-ggplot(results.sum)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot5
my_plot6<-ggplot(results.sum)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5, data=results)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5, data=results)+
geom_hline(yint=baseline$N, size=1.25, col='green4')+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=mean.pop), size=1.25)+
geom_line(aes(x=traps, y=mean.low), size=1.25, linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), size=1.25, linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")
my_plot6
all_checks<-unique(df.data$check)
all_checks
results<-expand.grid(traps=seq(from=2, to=50, by=2), checks=c(5:20), repeats=c(1:40))
nrow(results) # How many iterations?
nrow(results)*0.005/60 # It should take roughly 1.3 minutes
# We can get rid of the repeats column
results<-results[,-3]
# And need to add the pop.est, pop.low, and pop.high columns
results$pop.est<-NA
results$pop.low<-NA
results$pop.high<-NA
starttime=Sys.time()
for(i in 1:nrow(results))
{
# print(paste(i/nrow(results)*100, "% Complete")) # This is useful for keeping track of how many iterations have been completed
use_traps<-sample(all_traps, results$traps[i])
use_checks<-sample(all_checks, results$checks[i])
my_subset<-data.frame(df.data%>%filter(trap %in% use_traps)%>%filter(check %in% use_checks))
my_cmr(my_subset)
results$pop.est[i]<-pop.est
results$pop.low[i]<-pop.low
results$pop.high[i]<-pop.high
}
totaltime<-difftime(Sys.time(),starttime, unit="secs")
totaltime
paste(round(as.numeric(totaltime)/nrow(results),3),"seconds per iteration")
26*16*40
results<-expand.grid(traps=seq(from=2, to=50, by=2), checks=c(5:20), repeats=c(1:40))
nrow(results) # How many iterations?
length(seq(from=2, to=50, by=2))
results<-expand.grid(traps=seq(from=2, to=50, by=2), checks=c(5:20), repeats=c(0:40))
nrow(results) # How many iterations?
my_plot7<- ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, col='green4', size=1.25)+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")+
facet_wrap(~checks)
my_plot7
head(results)
starttime=Sys.time()
for(i in 1:nrow(results))
{
# print(paste(i/nrow(results)*100, "% Complete")) # This is useful for keeping track of how many iterations have been completed
use_traps<-sample(all_traps, results$traps[i])
use_checks<-sample(all_checks, results$checks[i])
my_subset<-data.frame(df.data%>%filter(trap %in% use_traps)%>%filter(check %in% use_checks))
my_cmr(my_subset)
results$pop.est[i]<-pop.est
results$pop.low[i]<-pop.low
results$pop.high[i]<-pop.high
}
totaltime<-difftime(Sys.time(),starttime, unit="secs")
totaltime
per.it<-paste(round(as.numeric(totaltime)/nrow(results),3),"seconds per iteration")
per.it
my_plot7<- ggplot(results)+
geom_jitter(aes(x=traps, y=pop.est), alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.low), col='purple', alpha=0.5)+
geom_jitter(aes(x=traps, y=pop.high), col='red', alpha=0.5)+
geom_hline(yint=baseline$N, col='green4', size=1.25)+
geom_hline(yint=baseline$pop.low, size=1.25, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, size=1.25, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")+
facet_wrap(~checks)
my_plot7
my_plot8<-ggplot(results)+
geom_jitter(aes(x=checks, y=pop.est), alpha=0.7)+
geom_jitter(aes(x=checks, y=pop.low), col='purple', alpha=0.7)+
geom_jitter(aes(x=checks, y=pop.high), col='red', alpha=0.7)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
theme_bw(16)+xlab("Number of Checks")+ylab("Population Estimate")+
facet_wrap(~traps)
my_plot8
df.data$check<-paste("C",df.data$check, sep="")
write.csv(df.data, "recapture_data.csv")
results.sum<-data.frame(results%>%
group_by(traps, checks)%>%
summarise(mean.pop=mean(pop.est), mean.low=mean(pop.low), mean.high=mean(pop.high)))
my_plot9<-ggplot(results.sum)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
geom_line(aes(x=traps, y=mean.pop))+
geom_line(aes(x=traps, y=mean.low), linetype='dashed')+
geom_line(aes(x=traps, y=mean.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Traps")+ylab("Population Estimate")+
facet_wrap(~checks)
my_plot9
my_plot10<-ggplot(results.sum)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
geom_line(aes(x=checks, y=mean.pop))+
geom_line(aes(x=checks, y=mean.low), linetype='dashed')+
geom_line(aes(x=checks, y=mean.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Checks")+ylab("Population Estimate")+
facet_wrap(~traps)
my_plot10
my_plot10<-ggplot(results.sum)+
geom_hline(yint=baseline$N, col='green4')+
geom_hline(yint=baseline$pop.low, col='green4',linetype='dashed')+
geom_hline(yint=baseline$pop.high, col='green4',linetype='dashed')+
geom_line(aes(x=checks, y=mean.pop))+
geom_line(aes(x=checks, y=mean.low), linetype='dashed')+
geom_line(aes(x=checks, y=mean.high), linetype='dashed')+
theme_bw(16)+xlab("Number of Checks")+ylab("Population Estimate")+
facet_wrap(~traps)
my_plot10
my_plot9
50*50
20000/60
30*50
15*30
450*20
9000/60
45*50
45*10*20
df.data<-read.csv(file="C:/Users/Danielle/Documents/GitHub/RLessons/SensitivityAnalysis/recapture_data.csv")
head(df.data)
results<-expand.grid(traps=seq(from=2, to=50, by=2), checks=c(5:20), repeats=c(0:40))
nrow(results) # How many iterations?
nrow(results)*per.it/60 # Based on our estimated time per iteration from previous results, how long will this take?
# We can get rid of the repeats column
results<-results[,-3]
# And need to add the pop.est, pop.low, and pop.high columns
results$pop.est<-NA
results$pop.low<-NA
results$pop.high<-NA
per.it
nrow(results)*as.numeric(per.it)/60 # Based on our estimated time per iteration from previous results, how long will this take?
nrow(results)*seconds(per.it)/60 # Based on our estimated time per iteration from previous results, how long will this take?
str(per.it)
per.it<-round(as.numeric(totaltime)/nrow(results),3)
paste(per.it,"seconds per iteration") # How long did each iteration take?
nrow(results)*per.it/60 # Based on our estimated time per iteration from previous results, how long will this take?
